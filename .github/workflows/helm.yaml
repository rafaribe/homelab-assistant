---
name: "Helm Charts"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "charts/**"
      - ".github/workflows/helm.yaml"
  push:
    branches:
      - main
    paths:
      - "charts/**"
      - ".github/workflows/helm.yaml"

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

jobs:
  chart-test:
    name: Chart Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Install helm unittest plugin
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Run helm unittest
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          for chart in charts/*/; do
            if [ -d "$chart/tests" ]; then
              echo "Running tests for $chart"
              helm unittest "$chart"
            else
              echo "No tests found for $chart, skipping"
            fi
          done

  chart-docs:
    name: Chart Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install helm-docs
        run: |
          cd /tmp
          wget https://github.com/norwoodj/helm-docs/releases/download/v1.14.2/helm-docs_1.14.2_Linux_x86_64.tar.gz
          tar -xzf helm-docs_1.14.2_Linux_x86_64.tar.gz
          sudo mv helm-docs /usr/local/bin/helm-docs
          chmod +x /usr/local/bin/helm-docs

      - name: Run helm-docs
        run: |
          cd charts
          helm-docs --chart-search-root=.
          
      - name: Check for documentation changes
        run: |
          if ! git diff --exit-code; then
            echo "Documentation is out of date. Please run 'make chart-docs' and commit the changes."
            exit 1
          fi

  chart-release:
    name: Chart Release
    runs-on: ubuntu-latest
    needs: [chart-test, chart-docs]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Package and Push Charts to OCI Registry
        run: |
          mkdir -p packaged-charts
          for chart_dir in charts/*/; do
            if [ -d "$chart_dir" ]; then
              chart_name=$(basename "$chart_dir")
              echo "üì¶ Processing chart: $chart_name"
              
              # Get chart version
              chart_version=$(helm show chart "$chart_dir" | grep '^version:' | cut -d' ' -f2)
              echo "Chart version: $chart_version"
              
              # Package the chart
              helm package "$chart_dir" --destination ./packaged-charts/
              
              # Push to OCI registry with -chart suffix to distinguish from Docker images
              chart_package="./packaged-charts/${chart_name}-${chart_version}.tgz"
              oci_chart_name="${chart_name}-chart"
              if [ -f "$chart_package" ]; then
                echo "üöÄ Pushing ${oci_chart_name}:$chart_version to OCI registry..."
                helm push "$chart_package" oci://ghcr.io/${{ github.repository_owner }}/${oci_chart_name}
                echo "‚úÖ Successfully pushed ${oci_chart_name}:$chart_version"
              else
                echo "‚ùå Chart package not found: $chart_package"
                exit 1
              fi
            fi
          done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: charts
          skip_packaging: true
          packages_with_index: true
          skip_existing: true

      - name: Setup Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main'

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          path: .cr-index

      - name: Deploy to GitHub Pages
        id: deployment
        if: github.ref == 'refs/heads/main'
        uses: actions/deploy-pages@v4
